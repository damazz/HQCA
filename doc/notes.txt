4.8.19

printing is still weird.

Things that need to be printed: 
- header
- parameters
- error correction
- optimiziation
- 


1.8.19 

Need to do the following:
- add ending statistics for run time and computation power, qc. demands as well
- configure optimizers for nevergrad, i.e. gradient free optimization
- import to Sequoia, etc.
- add MO outputs
- error modelling (i.e., dephasing, decoupling, etc.)
- implement schemes for spin
    - spin coupled 
    - spin free
    - symmetric parameterization

12.3 
Still a few things to do, but have the essentials:
- Error modelling


# 11.19 - 11.22

Next changes in version. Including an error simulating circuit. Implementation
of the Jordan-Wigner mapping. How to perform a compact versus direct mapping.
Lots of things to change, big question is how to change everything efficiently. 

Need to do a couple things however. First, figure out a way to split the compact
and direct mapping. Next, need to figure out what the actual code is. Maybe also
input different optimizers, or have different ones available for the
optimization. Natural orbital basis? Don't think so.....hrm. 

Basic idea is to have a 2 electron system, and do tomography on it to obtain a
more accurate energy. 1-RDM tomography. And select 2-RDM tomography for getting
the phase. 

In summary:
x Clean up code
x Update QISKit throughout
x Need to update the energy evaluation routine
x Splitting compact and direct mapping (algorithms, tomography, optimizers)
x Create mappings, coding in different implementations
x Finding simple circuits (need to do some reading, design, etc.)
- Want to also incorporate an error model (needs to be implemented in backend)
- Add option to attach H to output
x change main a little, so that orb is seperate, maybe more simple - maybe
x subroutines for orbital optimization and occupation? transition to qc? 
- Maybe incorporate the HF package (smart HF)
- Add MO outputs (i.e., clean and save the Store object)
- Need to add different optimizers
x Reimplement compact tomography
x Remove outdated keywords, including:
    run_type  
    occ_increase
    qc_combine
    qc_order
    chem_orb -> 
    mapping -> move to compact
    chem_orb -> ? guess not always needed 
x Add new keywords:
    qc_provider
    qc_algorithm -> qa_alg

    


# 11.18

Changing the structure of the work - adding in fermionic mapping


# 7.10.18

So far, have added orbital optimizations to the program pretty successfully.
Unfortunately, large changes were made to the IBM code, and so now a slew of
things need to be carried out. 

1. Essentially, rebuild the framework. We know now more or less what we need, we
can keep the standalone aspect of the ibmqx machine, but we need to incorporate
it as module into our work. Concerning this, ibmqx module should be able to:
   
a. Run designated circuits
b. Interact effectively with the IBM device
c. Return counts for a variety of different devices
d. Optional communication with IBM server

Optionally:

i  .  read in qasm
ii .  use the error simulator
iii.
iv .
v  .

 

# 5.11.18 

Plan for constructing program. Need to edit output so it can be handled better.
Namely, need to:
- Change the output format of the QC code 
- Include a 'write input file', i.e., a write config text, for the main program
- Make components

Program should be as follows:
1. Generate starting file. File has locations for:
    - 1 and 2 electron integrals
    Also, includes the information for the run.

2. Begin run. Generate an input file, test the quantum computer or simulator, and
   return the 1-RDM or respective values. 

3. Evaluate Hamiltonian to calculate trial energy. 

4. Run optimizer to generate new points

5. Call subroutine again to recalculate the energy.  


------------
